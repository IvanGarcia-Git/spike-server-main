import { MigrationInterface, QueryRunner } from "typeorm";

export class AutoGenerated1747823359662 implements MigrationInterface {
    name = 'AutoGenerated1747823359662'

    public async up(queryRunner: QueryRunner): Promise<void> {
        await queryRunner.query(`CREATE TABLE \`liquidations\` (\`id\` int NOT NULL AUTO_INCREMENT, \`uuid\` varchar(36) NOT NULL, \`name\` varchar(255) NOT NULL, \`date\` date NOT NULL, \`status\` enum ('PENDIENTE', 'EN REVISION', 'PAGADA', 'RECHAZADA') NOT NULL DEFAULT 'PENDIENTE', \`userId\` int NOT NULL, \`createdAt\` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6), \`updatedAt\` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6), UNIQUE INDEX \`IDX_e0b3efeed89984d6f64dbf99b5\` (\`uuid\`), PRIMARY KEY (\`id\`)) ENGINE=InnoDB`);
        await queryRunner.query(`CREATE TABLE \`liquidation_contracts\` (\`id\` int NOT NULL AUTO_INCREMENT, \`uuid\` varchar(36) NOT NULL, \`liquidationId\` int NOT NULL, \`contractId\` int NOT NULL, \`overrideCommission\` decimal(10,2) NULL, \`createdAt\` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6), \`updatedAt\` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6), UNIQUE INDEX \`IDX_b366bfd0fa8f5593a108326600\` (\`uuid\`), UNIQUE INDEX \`IDX_ea01711bdf2d48317dc0c76b8f\` (\`liquidationId\`, \`contractId\`), PRIMARY KEY (\`id\`)) ENGINE=InnoDB`);
        await queryRunner.query(`ALTER TABLE \`liquidations\` ADD CONSTRAINT \`FK_0dc5d399cf658d77fcfa637be7c\` FOREIGN KEY (\`userId\`) REFERENCES \`user\`(\`id\`) ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`liquidation_contracts\` ADD CONSTRAINT \`FK_f2a46566e9b8aafdb57d7f96dfa\` FOREIGN KEY (\`liquidationId\`) REFERENCES \`liquidations\`(\`id\`) ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`liquidation_contracts\` ADD CONSTRAINT \`FK_77a9bfd6e72836e1776cde895d9\` FOREIGN KEY (\`contractId\`) REFERENCES \`contract\`(\`id\`) ON DELETE CASCADE ON UPDATE NO ACTION`);
    }

    public async down(queryRunner: QueryRunner): Promise<void> {
        
    }

}
