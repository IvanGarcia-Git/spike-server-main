import { MigrationInterface, QueryRunner } from "typeorm";

export class AutoGenerated1737810435829 implements MigrationInterface {
  name = "AutoGenerated1737810435829";

  public async up(queryRunner: QueryRunner): Promise<void> {
    await queryRunner.query(
      `CREATE TABLE \`telephony_data\` (\`id\` int NOT NULL AUTO_INCREMENT, \`uuid\` varchar(36) NOT NULL, \`landlinePhone\` int NULL, \`telephoneLines\` json NULL, \`extraServices\` varchar(255) NULL, PRIMARY KEY (\`id\`)) ENGINE=InnoDB`
    );
    await queryRunner.query(
      `CREATE TABLE \`telephony_data_rates_rate\` (\`telephonyDataId\` int NOT NULL, \`rateId\` int NOT NULL, INDEX \`IDX_3bfd9492bd44dc238b89c0dabc\` (\`telephonyDataId\`), INDEX \`IDX_d710538a3e2ad88ceda0cbf436\` (\`rateId\`), PRIMARY KEY (\`telephonyDataId\`, \`rateId\`)) ENGINE=InnoDB`
    );
    await queryRunner.query(`ALTER TABLE \`rate\` ADD \`products\` varchar(255) NULL`);
    await queryRunner.query(`ALTER TABLE \`rate\` ADD \`finalPrice\` float NULL`);
    await queryRunner.query(`ALTER TABLE \`contract\` ADD \`telephonyDataId\` int NULL`);
    await queryRunner.query(
      `ALTER TABLE \`contract\` ADD UNIQUE INDEX \`IDX_b4dfc73b58ebe303ef0e15bf70\` (\`telephonyDataId\`)`
    );
    await queryRunner.query(
      `CREATE UNIQUE INDEX \`REL_b4dfc73b58ebe303ef0e15bf70\` ON \`contract\` (\`telephonyDataId\`)`
    );
    await queryRunner.query(
      `ALTER TABLE \`contract\` ADD CONSTRAINT \`FK_b4dfc73b58ebe303ef0e15bf702\` FOREIGN KEY (\`telephonyDataId\`) REFERENCES \`telephony_data\`(\`id\`) ON DELETE CASCADE ON UPDATE NO ACTION`
    );
    await queryRunner.query(
      `ALTER TABLE \`telephony_data_rates_rate\` ADD CONSTRAINT \`FK_3bfd9492bd44dc238b89c0dabc9\` FOREIGN KEY (\`telephonyDataId\`) REFERENCES \`telephony_data\`(\`id\`) ON DELETE CASCADE ON UPDATE CASCADE`
    );
    await queryRunner.query(
      `ALTER TABLE \`telephony_data_rates_rate\` ADD CONSTRAINT \`FK_d710538a3e2ad88ceda0cbf436c\` FOREIGN KEY (\`rateId\`) REFERENCES \`rate\`(\`id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`
    );
  }

  public async down(queryRunner: QueryRunner): Promise<void> {}
}
